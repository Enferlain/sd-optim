/* --- The Canvas where windows live --- */
.workbenchCanvas {
    width: 100vw;
    height: 100vh;
    position: relative;
    overflow: hidden; /* Hide anything that gets dragged off-screen */
  }
  
  /* --- Window Styling --- */
  .glassPanel {
    composes: glassPanel from './ConfigurationManager.module.css'; 
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }
  
  /* The header is no longer the drag handle itself */
  .panelHeader {
    padding: var(--space-8) var(--space-12);
    background-color: rgba(0,0,0,0.2);
    border-bottom: 1px solid rgba(255,255,255,0.1);
    font-weight: var(--font-weight-medium);
    flex-shrink: 0;
    /* Make the text unselectable so dragging feels smoother */
    user-select: none;
  }
  
  .panelContent {
    flex-grow: 1;
    overflow-y: auto;
    overflow-x: hidden;
    padding: var(--space-16);
  }
  
  /* --- THIS IS THE MAGIC CLASS! --- */
  /* Any element with this class will NOT trigger a drag on the window */
  .dragCancel {
    /* This class doesn't need any styles, it's just a marker for react-rnd */
  }
  
  /* --- The Pretty Reset Button --- */
  .resetButton {
    composes: btn from './ConfigurationManager.module.css';
    position: fixed;
    top: var(--space-16);
    right: var(--space-16);
    z-index: 9999;
    /* Make it a circle! */
    border-radius: var(--radius-full);
    width: 40px;
    height: 40px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* We need to make sure the CustomSelect inside its window is not draggable */
  /* The easiest way is to wrap it in a div with the dragCancel class in the JSX */