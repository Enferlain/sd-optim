# Example Optimization Guide using Custom Blocks

# --- IMPORTANT ---
# This tells the ParameterHandler in bounds.py to use our custom block definition
# for components listed below that are also defined within sdxl-optim_blocks.yaml.
# It MUST match the 'identifier' in the block config file AND be registered by setup_custom_blocks.
#custom_block_config_id: "sdxl-optim_blocks"

# --- Component Optimization Strategies ---
# Define how parameters (like 'alpha' from weighted_sum) are applied.
# The 'name' MUST match a component name in the config identified by 'custom_block_config_id'
# (if defined there) OR in the base model config (e.g., 'sdxl-sgm').

components:
  - name: diffuser # Define the component
    optimize_params: [alpha, rank_ratio] # Default params for strategies below
    # Use multiple 'group' strategies for different layer types/stages
    strategies:
      - type: group
        groups:
          - name: unet_down_op_early # First downsample (input_blocks.3.0.op.*)
            # Optimize this, but constrain HIGH based on findings for non-grey results
            keys: ["*.input_blocks.3.0.op.*"]

      - type: group
        groups:
          - # out8 stuff
          - name: unet_out08 # Blocks 1, 2
            keys:
              - "model.diffusion_model.input_blocks.8.0.skip_connection.bias"

      - type: group
        groups:
         # Input Attention (Keep these optimizable, trended higher alpha)
         - name: in04_attn1
           keys: ["*.input_blocks.4.*.attn1.*.weight"]

  - name: # clip_l # Define next component
    optimize_params: [alpha] # Default params
    strategies:
      - type: select # Apply select strategy (can target blocks or keys)
        optimize_params: [alpha] # Only apply alpha via select here
        keys:
          - "CLIP_L_EMBEDDING" # Block name
          - "CLIP_L_IN1[0-1]" # Block pattern
          - "*.output_blocks.5.*.conv2.*" # Key pattern
      - type: single # Apply single strategy to remaining params for this component
        optimize_params: [constraint, rank_ratio] # Apply to constraint & rank_ratio

  - name: clip_g # Define next component
    optimize_params: [alpha] # Default params
    strategies:
      - type: all # Apply select strategy (can target blocks or keys)
        optimize_params: [alpha] # Only apply alpha via select here

  # Example 5: Do not optimize 'vae'
  # - name: vae
  #   strategy: none

  # Example 6: Placeholder for layer adjustments (not currently optimized)
  - name: layer_adjustments
    strategy: none
    parameters: # These are NOT optimized if strategy is 'none', just kept for reference
      detail1: [-2.18, 3]
      detail2: [-2.18, 4]
      detail3: [0, 4]
      contrast: [2.18, 7.5]
      brightness: [-4, -2]
      col1: [-10, 10]
      col2: [-10, 10]
      col3: [-10, 10]

# --- Custom Bounds ---
# Optional section to override the default bounds (0.0, 1.0) for specific parameters
# generated by the strategies above.
# Parameter names depend on the component name, strategy, key/group names, and the merge method's parameter name.
# See the [[Configuration]] wiki page for detailed naming conventions.
custom_bounds:
  # --- Examples based on merge_method having an 'alpha' parameter ---

  # If strategy: all for 'unet'
  # "unet.input_blocks.0.0.weight_alpha": [0.1, 0.9]

  # If strategy: select for 'txt1' with key "transformer.text_model.encoder.layers.10.mlp.fc1.weight"
  # "transformer.text_model.encoder.layers.10.mlp.fc1.weight_alpha": [0.2, 0.8]

  # If strategy: group for 'txt2' with group name 'text_encoder_early_layers'
  # text_encoder_early_layers_alpha: [0.3, 0.7]

  # If strategy: single for 'vae'
  # vae_single_param_alpha: [0.4, 0.6]

  # --- General Examples ---
  # Override bounds for *all* parameters named 'constraint' (if generated by the strategies)
  # constraint: [0.01, 0.2]

  # Override bounds for *all* parameters named 'k'
  # k: [0.1, 0.5]

  # Set a fixed value for a parameter (it won't be optimized)
  # some_parameter_name: 0.75

  # Define categorical options
  # some_categorical_parameter: [128, 256, 512]

  # Define binary options
  # some_binary_parameter: [0, 1]


# --- Deprecated/Obsolete Sections ---
# custom_ranges: # Removed - Use custom_bounds with specific key names instead
# merge_keys: # Removed - sd-mecha handles key filtering differently