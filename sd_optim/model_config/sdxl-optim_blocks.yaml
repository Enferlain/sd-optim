# Filename: sdxl-optim_blocks.yaml
# Place this in conf/model_configs/ or sd_mecha/extensions/builtin/model_configs/
# Remember to register it if placed outside sd-mecha!

identifier: sdxl-optim_blocks # Unique identifier for this custom block configuration

components:
  unet: # Component name matching the base sdxl-sgm config
    # Keys within this component are now our defined blocks
    # Prefixes based on 'model.diffusion_model.'
    UNET_IN00: {shape: [], dtype: float32}
    UNET_IN01: {shape: [], dtype: float32}
    UNET_IN02: {shape: [], dtype: float32}
    UNET_IN03: {shape: [], dtype: float32}
    UNET_IN04: {shape: [], dtype: float32}
    UNET_IN05: {shape: [], dtype: float32}
    UNET_IN06: {shape: [], dtype: float32}
    UNET_IN07: {shape: [], dtype: float32}
    UNET_IN08: {shape: [], dtype: float32}
    UNET_MID00: {shape: [], dtype: float32}  # Middle block
    UNET_OUT00: {shape: [], dtype: float32}
    UNET_OUT01: {shape: [], dtype: float32}
    UNET_OUT02: {shape: [], dtype: float32}
    UNET_OUT03: {shape: [], dtype: float32}
    UNET_OUT04: {shape: [], dtype: float32}
    UNET_OUT05: {shape: [], dtype: float32}
    UNET_OUT06: {shape: [], dtype: float32}
    UNET_OUT07: {shape: [], dtype: float32}
    UNET_OUT08: {shape: [], dtype: float32}
    UNET_TIME_EMBED: {shape: [], dtype: float32} # For time_embed keys
    UNET_OUT_FINAL: {shape: [], dtype: float32}  # For final 'model.diffusion_model.out.*' keys
    UNET_ELSE: {shape: [], dtype: float32}       # Fallback for unet keys not matching above

  clip_l: # Component name matching the base sdxl-sgm config ('txt')
    # Prefixes based on 'conditioner.embedders.0.transformer.text_model.'
    CLIP_L_IN00: {shape: [], dtype: float32}
    CLIP_L_IN01: {shape: [], dtype: float32}
    CLIP_L_IN02: {shape: [], dtype: float32}
    CLIP_L_IN03: {shape: [], dtype: float32}
    CLIP_L_IN04: {shape: [], dtype: float32}
    CLIP_L_IN05: {shape: [], dtype: float32}
    CLIP_L_IN06: {shape: [], dtype: float32}
    CLIP_L_IN07: {shape: [], dtype: float32}
    CLIP_L_IN08: {shape: [], dtype: float32}
    CLIP_L_IN09: {shape: [], dtype: float32}
    CLIP_L_IN10: {shape: [], dtype: float32}
    CLIP_L_IN11: {shape: [], dtype: float32}
    CLIP_L_EMBEDDING: {shape: [], dtype: float32}     # For embedding keys
    CLIP_L_FINAL_NORM: {shape: [], dtype: float32} # For final_layer_norm keys
    CLIP_L_ELSE: {shape: [], dtype: float32}       # Fallback for clip_l keys

  clip_g: # Component name matching the base sdxl-sgm config ('txt2')
    # Prefixes based on 'conditioner.embedders.1.model.'
    CLIP_G_IN00: {shape: [], dtype: float32}
    CLIP_G_IN01: {shape: [], dtype: float32}
    CLIP_G_IN02: {shape: [], dtype: float32}
    CLIP_G_IN03: {shape: [], dtype: float32}
    CLIP_G_IN04: {shape: [], dtype: float32}
    CLIP_G_IN05: {shape: [], dtype: float32}
    CLIP_G_IN06: {shape: [], dtype: float32}
    CLIP_G_IN07: {shape: [], dtype: float32}
    CLIP_G_IN08: {shape: [], dtype: float32}
    CLIP_G_IN09: {shape: [], dtype: float32}
    CLIP_G_IN10: {shape: [], dtype: float32}
    CLIP_G_IN11: {shape: [], dtype: float32}
    CLIP_G_IN12: {shape: [], dtype: float32}
    CLIP_G_IN13: {shape: [], dtype: float32}
    CLIP_G_IN14: {shape: [], dtype: float32}
    CLIP_G_IN15: {shape: [], dtype: float32}
    CLIP_G_IN16: {shape: [], dtype: float32}
    CLIP_G_IN17: {shape: [], dtype: float32}
    CLIP_G_IN18: {shape: [], dtype: float32}
    CLIP_G_IN19: {shape: [], dtype: float32}
    CLIP_G_IN20: {shape: [], dtype: float32}
    CLIP_G_IN21: {shape: [], dtype: float32}
    CLIP_G_IN22: {shape: [], dtype: float32}
    CLIP_G_IN23: {shape: [], dtype: float32}
    CLIP_G_IN24: {shape: [], dtype: float32}
    CLIP_G_IN25: {shape: [], dtype: float32}
    CLIP_G_IN26: {shape: [], dtype: float32}
    CLIP_G_IN27: {shape: [], dtype: float32}
    CLIP_G_IN28: {shape: [], dtype: float32}
    CLIP_G_IN29: {shape: [], dtype: float32}
    CLIP_G_IN30: {shape: [], dtype: float32}
    CLIP_G_IN31: {shape: [], dtype: float32}
    CLIP_G_LN_FINAL: {shape: [], dtype: float32}       # For ln_final keys
    CLIP_G_TEXT_PROJECTION: {shape: [], dtype: float32}   # For text_projection keys
    CLIP_G_EMBEDDING: {shape: [], dtype: float32} # For token_embedding keys
    CLIP_G_ELSE: {shape: [], dtype: float32}       # Fallback for clip_g keys

#  vae: # Component name matching the base sdxl-sgm config
    # Prefixes based on 'first_stage_model.'
#    VAE_ALL: {shape: [], dtype: float32} # Simple block for the whole VAE
    # Add more VAE blocks here if needed, or rely on VAE_ALL as fallback